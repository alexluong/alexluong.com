package views

import (
	"bytes"
	"fmt"
	"github.com/PuerkitoBio/goquery"
	"github.com/alexluong/alexluong.com/internal/feed"
	"github.com/alexluong/alexluong.com/internal/models"
	"github.com/sourcegraph/syntaxhighlight"
	"strings"
	"time"
)

templ PostView(post *models.Post) {
	@Layout(feed.MakePostPath(post.Type, post.Slug)) {
		<a href="/" class="flex items-center space-x-2 font-semibold text-gray-700 dark:text-white">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M21 16.811c0 .864-.933 1.406-1.683.977l-7.108-4.061a1.125 1.125 0 0 1 0-1.954l7.108-4.061A1.125 1.125 0 0 1 21 8.689v8.122ZM11.25 16.811c0 .864-.933 1.406-1.683.977l-7.108-4.061a1.125 1.125 0 0 1 0-1.954l7.108-4.061a1.125 1.125 0 0 1 1.683.977v8.122Z"></path>
			</svg>
			<span>Alex's website</span>
		</a>
		@prose("mt-6") {
			<p class="text-sm font-light dark:text-gray-300">
				@datetime(post.Published.Time(), time.DateOnly, time.DateOnly)
			</p>
			<h1 class="text-4xl font-semibold dark:text-white">{ post.Title }</h1>
			if post.Cover != "" {
				<img src={ coverImageUrl(post) } alt={ post.Title } class="mx-auto mt-8 rounded-xl"/>
			}
			@templ.Raw(tokenizeContent(post.Content))
		}
	}
}

func coverImageUrl(post *models.Post) string {
	if post.Cover == "" {
		return post.Cover
	}
	return fmt.Sprintf("/api/files/posts/%s/%s", post.Id, post.Cover)
}

// thanks zupzup
// @see https://www.zupzup.org/go-markdown-syntax-highlight/index.html
func tokenizeContent(content string) string {
	doc, err := goquery.NewDocumentFromReader(bytes.NewReader([]byte(content)))
	if err != nil {
		panic(err)
	}
	doc.Find("pre[class*=\"language-\"] > code").Each(func(i int, s *goquery.Selection) {
		oldCode := s.Text()
		formatted, err := syntaxhighlight.AsHTML([]byte(oldCode))
		if err != nil {
			panic(err)
		}
		s.SetHtml(string(formatted))
	})
	new, err := doc.Html()
	if err != nil {
		panic(err)
	}
	// replace unnecessarily added html tags
	new = strings.Replace(new, "<html><head></head><body>", "", 1)
	new = strings.Replace(new, "</body></html>", "", 1)
	return new
}
