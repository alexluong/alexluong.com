package views

import (
	"github.com/alexluong/alexluong.com/internal/models"
	"time"
)

type IndexViewProps struct {
	Posts []*models.Post
}

templ IndexView(props IndexViewProps) {
	@Layout("") {
		<div class="flex items-center space-x-2 dark:text-white">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="m6.75 7.5 3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0 0 21 18V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v12a2.25 2.25 0 0 0 2.25 2.25Z"></path>
			</svg>
			<h1 class="font-semibold">Alex Luong</h1>
		</div>
		<div class="mt-12">
			<p>Hi there, I'm Alex. I write code and build things. I <i>attempt</i> to share my experiences through my writings here (emphasis on attempt).</p>
			<p class="mt-4">When not doing those, I enjoy spending time with my pup Charlie, playing chess, and doing sports.</p>
			// <div class="flex flex-col gap-2 mt-4 md:items-center md:flex-row">
			// 	<a href="/professional" class="px-4 py-2 text-sm text-center text-gray-100 border border-gray-100 rounded">
			// 		professional experiences
			// 	</a>
			// 	<a href="/personal" class="px-4 py-2 text-sm text-center text-gray-100 border border-gray-100 rounded">
			// 		üê∂ personal life
			// 	</a>
			// 	<div class="flex items-center justify-center space-x-2">
			// 		<a href="http://github.com/alexluong" target="_blank" rel="noreferrer noopener">
			// 			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 98 96" class="size-6">
			// 				<path fill-rule="evenodd" clip-rule="evenodd" d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z" fill="#fff"></path>
			// 			</svg>
			// 		</a>
			// 		<a href="http://twitter.com/alex__luong" target="_blank" rel="noreferrer noopener">
			// 			<svg xmlns="http://www.w3.org/2000/svg" class="size-6" shape-rendering="geometricPrecision" text-rendering="geometricPrecision" image-rendering="optimizeQuality" fill-rule="evenodd" clip-rule="evenodd" viewBox="0 0 640 640">
			// 				<path d="M640.012 121.513c-23.528 10.524-48.875 17.516-75.343 20.634 27.118-16.24 47.858-41.977 57.756-72.615-25.347 14.988-53.516 25.985-83.363 31.866-24-25.5-58.087-41.35-95.848-41.35-72.508 0-131.21 58.736-131.21 131.198 0 10.228 1.134 20.232 3.355 29.882-109.1-5.528-205.821-57.757-270.57-137.222a131.423 131.423 0 0 0-17.764 66c0 45.497 23.102 85.738 58.347 109.207-21.508-.638-41.74-6.638-59.505-16.359v1.642c0 63.627 45.225 116.718 105.32 128.718-11.008 2.988-22.63 4.642-34.606 4.642-8.48 0-16.654-.874-24.78-2.35 16.783 52.11 65.233 90.095 122.612 91.205-44.989 35.245-101.493 56.233-163.09 56.233-10.63 0-20.988-.65-31.334-1.89 58.229 37.359 127.206 58.997 201.31 58.997 241.42 0 373.552-200.069 373.552-373.54 0-5.764-.13-11.35-.366-16.996 25.642-18.343 47.87-41.493 65.469-67.844l.059-.059z" fill="#fff"></path>
			// 			</svg>
			// 		</a>
			// 	</div>
			// </div>
		</div>
		<div class="mt-16">
			<h3 class="font-semibold dark:text-white">Writings</h3>
			<ul class="mt-4 space-y-4">
				for _, post := range props.Posts {
					<li>
						@postLinkItem(*post)
					</li>
				}
			</ul>
		</div>
	}
}

templ postLinkItem(post models.Post) {
	<div class="flex space-x-4">
		<div class="w-24 font-light dark:text-gray-400">
			@datetime(post.Published.Time(), time.DateOnly, time.DateOnly)
		</div>
		<div class="w-16 font-light dark:text-gray-400">
			{ post.Type }
		</div>
		<a
			class="flex items-center space-x-2 underline dark:text-fuchsia-400"
			if post.External != "" {
				href={ templ.SafeURL(post.External) }
			}
			if post.Type == "note" {
				href={ templ.SafeURL(noteURL(post.Slug)) }
			}
			if post.Type == "article" {
				href={ templ.SafeURL(articleURL(post.Slug)) }
			}
		>
			if post.External != "" {
				<span>{ post.Title }</span>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
					<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 0 0 3 8.25v10.5A2.25 2.25 0 0 0 5.25 21h10.5A2.25 2.25 0 0 0 18 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path>
				</svg>
			} else {
				{ post.Title }
			}
		</a>
	</div>
}

func articleURL(slug string) string {
	return "/articles/" + slug
}

func noteURL(slug string) string {
	return "/notes/" + slug
}
